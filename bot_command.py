import discord
from discord.ext import commands
import algoritbot as ab
import os,random
import requests

def get_duck_image_url():    
    url = 'https://random-d.uk/api/random'
    res = requests.get(url)
    data = res.json()
    return data['url']

intents = discord.Intents.default()
intents.message_content = True
token = "Token"

bot = commands.Bot(command_prefix = "%" , intents = intents, help_command = None)

@bot.event
async def on_ready():
    print(f"Hola soy: {bot.user}")

@bot.command(name = "Hi")
async def hello(ctx,nombre):
    await ctx.send(f"Hola soy: {bot.user} un gusto conocerte {nombre}")

@bot.command(name = "psw")
async def password(ctx,a:str,b:int):
    nombre = str(a)
    cr = ab.gen_pass(b)
    await ctx.send(f"Su contrase√±a es: {cr}{nombre}")

@bot.command(name = "HELP")
async def helpme(ctx):
    help_text = "**Comandos disponibles:**\n"
    for command in bot.commands:
        help_text += f"- `%{command.name}`\n"
    
    await ctx.send(help_text)

@bot.command(name = "momasos")
async def mem(ctx,a):
    if a == "memes":
        j = random.choice(os.listdir("memes"))
        with open(f"memes/{j}","rb") as f:
            picture = discord.File(f)
        await ctx.send(file = picture)
    elif a == "chamba":
        i = random.choice(os.listdir("chamba"))
        with open(f"chamba/{i}","rb") as f:
            picture = discord.File(f)
        await ctx.send(file = picture)

@bot.command(name = "momasos_porcentaje")
async def mem(ctx):
    archivos_memes = os.listdir("memes")
    probabilitis=[0.1,0.3,0.6]
    a = random.choices(archivos_memes, weights=probabilitis)[0]
    with open(f"memes/{a}","rb") as f:
        picture = discord.File(f)
    await ctx.send(file = picture)

@bot.command(name = "pato")
async def duck(ctx):
    image = get_duck_image_url()
    await ctx.send(image)

@bot.command(name = "PRE")
async def proyect(ctx):
    await ctx.send("¬°Hola! üåç//  Nos emociona que est√©s considerando unirte al Proyecto Reciclable Educativo (P.R.E.). Este proyecto es una oportunidad incre√≠ble para aprender m√°s sobre c√≥mo cuidar nuestro planeta a trav√©s de pr√°cticas ecol√≥gicas y la reducci√≥n de residuos. ¬°Con tu participaci√≥n, podemos hacer un cambio positivo en el mundo y en tu vida!, Usa los comandos %Basuras (Color de la basura deseada),%Cambios (Material que deseas cambiar por uno mas sostenible) para lograr cambiar el mundo")
    @bot.command(name = "Basuras")
    async def paper(ctx, color: str):
        color = color.lower()  # Asegura que el color sea manejado en min√∫sculas
        response = ""

        if color in ["verde", "green", "vert"]:
            response = "üü¢ **Basura Org√°nica:** Aqu√≠ se botan los restos de comida, c√°scaras de frutas, y otros desechos biodegradables."
        elif color in ["azul", "blue", "bleu"]:
            response = "üîµ **Papel y Cart√≥n:** Aqu√≠ se botan papeles, revistas, cajas de cart√≥n, y otros materiales similares."
        elif color in ["amarillo", "yellow", "jaune"]:
            response = "üü° **Pl√°sticos y Metales:** Aqu√≠ se botan botellas de pl√°stico, latas, y otros envases pl√°sticos o met√°licos."
        elif color in ["gris", "gray", "grey"]:
            response = "‚ö´ **Residuos No Reciclables:** Aqu√≠ se botan restos de cer√°mica, papel sucio, pa√±ales, y otros residuos que no pueden reciclarse."
        elif color in ["rojo", "red", "rouge"]:
            response = "üî¥ **Desechos Peligrosos:** Aqu√≠ se deben depositar productos qu√≠micos, pilas, y otros materiales peligrosos."
        elif color in ["marr√≥n", "brown", "brun"]:
            response = "üü§ **Desechos Org√°nicos de Jard√≠n:** Aqu√≠ se botan hojas, ramas, y otros desechos vegetales."
        else:
            response = "‚ùå Lo siento, no reconozco ese color. Por favor, elige entre verde/green/vert, azul/blue/bleu, amarillo/yellow/jaune, gris/gray/grey, rojo/red/rouge, o marr√≥n/brown/brun."

        await ctx.send(response)

    @bot.command(name = "Cambios")
    async def change(ctx, cambio:str):
        if cambio == "Bolsas":
            with open(f"PRE/bolsas.PNG","rb") as f:
                picture = discord.File(f)
            await ctx.send(file = picture)
            await ctx.send(f"Una alternativa al uso de bolsas de pl√°stico es optar por bolsas de papel o de tela. Las bolsas de papel son biodegradables y se descomponen m√°s f√°cilmente en el medio ambiente, lo que reduce el impacto ecol√≥gico. Las bolsas de tela, por otro lado, son reutilizables y duraderas, lo que les otorga una segunda vida √∫til y disminuye la necesidad de producir nuevas bolsas constantemente. Al elegir estas opciones, contribuimos a un menor uso de pl√°sticos y ayudamos a proteger nuestro planeta.")
        elif cambio == "Pitillos":
            with open(f"PRE/pitillos.png","rb") as f:
                picture = discord.File(f)
            await ctx.send(file=picture)
            await ctx.send(f"Una alternativa a los pitillos de pl√°stico ser√≠a utilizar pitillos de papel o de materiales reutilizables como el acero o el bamb√∫. Estos materiales son m√°s f√°ciles de degradar y ofrecen una opci√≥n m√°s sostenible para el medio ambiente, ayudando a reducir la cantidad de residuos pl√°sticos que contaminan los oc√©anos y la tierra.")
        elif cambio == "Vasos":
            with open(f"PRE/vasos.png","rb") as f:
                picture = discord.File(f)
            await ctx.send(file=picture)
            await ctx.send(f"Una alternativa a los vasos de pl√°stico ser√≠a utilizar vasos de papel, vidrio, acero inoxidable o materiales biodegradables como el PLA (√°cido polil√°ctico). Estos materiales no solo son m√°s f√°ciles de degradar, sino que tambi√©n pueden ser reutilizados, lo que reduce significativamente la cantidad de residuos pl√°sticos en el medio ambiente. Adem√°s, optar por vasos reutilizables en lugar de desechables ayuda a disminuir la contaminaci√≥n y promueve un estilo de vida m√°s sostenible.")

    @bot.command(name = "Plantando")
    async def practicando(ctx):
        await ctx.send(f"Gracias a ti plantaremos un arbolito en este chat :deciduous_tree:")

bot.run(token)
